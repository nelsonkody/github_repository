Kody Nelson
3/21/2023

Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions
that will help you profile and understand the data just like a data scientist would.
For this first part of the assignment, you will be assessed both on the correctness
of your findings, as well as the code you used to arrive at your answer. You will be
graded on how easy your code is to read, so remember to use proper formatting and
comments where necessary.

In the second part of the assignment, you are asked to come up with your own
inferences and analysis of the data for a particular research question you want
to answer. You will be required to prepare the dataset for the analysis you
choose to do. As with the first part, you will be graded, in part, on how easy
your code is to read, so use proper formatting and comments to illustrate and
communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the
questions you are being asked, and your job will be to transfer your answers
and SQL coding where indicated into this worksheet so that your peers can
review your work. You should be able to use any Text Editor (Windows Notepad,
 Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers.
  If you are going to use Word or some other page layout application, just be
   careful to make sure your answers and code are lined appropriately.

In this case, you may want to save as a PDF to ensure your formatting remains
intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000



2. Find the total distinct records by either the foreign key or primary key
for each table. If two foreign keys are listed in the table, please specify
which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 3979 (business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.



3. Are there any columns with null values in the Users table?
Indicate "yes," or "no."

	Answer: No


	SQL code used to arrive at answer:

  SELECT *
  FROM user




4. For each table and column listed below, display the smallest (minimum),
largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars

		min:	1
    max:	5
    avg: 3.7082


	ii. Table: Business, Column: Stars

		min: 1
    max: 5
    avg: 3.6549


	iii. Table: Tip, Column: Likes

		min: 0
    max: 2
    avg: 0.144


	iv. Table: Checkin, Column: Count

		min:	1
    max:	53
    avg:  1.9414


	v. Table: User, Column: Review_count

		min:	0
    max:		2000
    avg:  24.2995



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

  SELECT city, sum(review_count) as Reviews
  FROM business
  GROUP BY city
  ORDER BY Reviews DESC

	Copy and Paste the Result Below:

  +-----------------+---------+
  | city            | Reviews |
  +-----------------+---------+
  | Las Vegas       |   82854 |
  | Phoenix         |   34503 |
  | Toronto         |   24113 |
  | Scottsdale      |   20614 |
  | Charlotte       |   12523 |
  | Henderson       |   10871 |
  | Tempe           |   10504 |
  | Pittsburgh      |    9798 |
  | Montréal        |    9448 |
  | Chandler        |    8112 |
  | Mesa            |    6875 |
  | Gilbert         |    6380 |
  | Cleveland       |    5593 |
  | Madison         |    5265 |
  | Glendale        |    4406 |
  | Mississauga     |    3814 |
  | Edinburgh       |    2792 |
  | Peoria          |    2624 |
  | North Las Vegas |    2438 |
  | Markham         |    2352 |
  | Champaign       |    2029 |
  | Stuttgart       |    1849 |
  | Surprise        |    1520 |
  | Lakewood        |    1465 |
  | Goodyear        |    1155 |
  +-----------------+---------+
  (Output limit exceeded, 25 of 362 total rows shown)



6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, count(*)
FROM business
WHERE city = "Avon"
GROUP BY stars
ORDER BY (stars)ASC


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+----------+
| stars | count(*) |
+-------+----------+
|   1.5 |        1 |
|   2.5 |        2 |
|   3.5 |        3 |
|   4.0 |        2 |
|   4.5 |        1 |
|   5.0 |        1 |
+-------+----------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, count(*)
FROM business
WHERE city = "Beachwood"
GROUP BY stars
ORDER BY (stars)ASC


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+----------+
| stars | count(*) |
+-------+----------+
|   2.0 |        1 |
|   2.5 |        1 |
|   3.0 |        2 |
|   3.5 |        2 |
|   4.0 |        1 |
|   4.5 |        2 |
|   5.0 |        5 |
+-------+----------+



7. Find the top 3 users based on their total number of reviews:

SQL code used to arrive at answer:

SELECT name as User, review_count as Reviews
FROM user
ORDER BY review_count DESC limit 3



Copy and Paste the Result Below:

+--------+---------+
| User   | Reviews |
+--------+---------+
| Gerald |    2000 |
| Sara   |    1629 |
| Yuri   |    1339 |
+--------+---------+



8. Does posting more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	Users at with very few reviews had very few fans, but towards the top of the
	fans distribution, quite often the most popular users were not the users with
  the most posts. For example the top four most popular users have ascending
  order by 	reviews. They are positively correlated but other factors
  need to be considered as to what makes a user popular.


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews (1780) with the word "love" in it as apposed
  to 232 reviews with the word "hate" in it.


	SQL code used to arrive at answer:

  SELECT count(*), (SELECT count(*) FROM review WHERE text like '%love%')
  FROM review
  WHERE text like "%hate%"


10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

  SELECT name as User, fans
  FROM user
  ORDER BY fans DESC limit 10


	Copy and Paste the Result Below:

+-----------+------+
| User      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+




Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that
city or category by their overall star rating. Compare the businesses with 2-3
stars to the businesses with 4-5 stars and answer the following questions.
Include your code.

i. Do the two groups you chose to analyze have a different distribution of hours?

I chose to look at Restaurants in Las Vegas. Although a small sample size, I noticed
that the restaurant with lowest rating was open for 13 hours every day of the week.
The other two restaurants with a 4 star rating had more reasonable hours and likely have
a higher quality of service.

SELECT b.name, c.category, h.hours, b.stars
FROM (business as b INNER JOIN category as c ON b.id = c.business_id)
    LEFT JOIN hours as h ON h.business_id = c.business_id
WHERE b.city = 'Las Vegas' and c.category = 'Restaurants'

ii. Do the two groups you chose to analyze have a different number of reviews?

  The restaurant with 3 stars has the lowest amount of reviews, 123. The other
  two restaurants with 4 stars have 168 and 768 reviews.



iii. Are you able to infer anything from the location data provided between
these two groups? Explain.

I am unable to, as one entry does not have a neighborhood listed. The other two are in
different neighborhoods from one another.

SQL code used for analysis:

SELECT b.name, c.category, h.hours, b.stars, b.review_count, b.neighborhood
FROM (business as b INNER JOIN category as c ON b.id = c.business_id)
    INNER JOIN hours as h ON h.business_id = c.business_id
WHERE c.category = 'Restaurants' and b.city = 'Las Vegas'



2. Group business based on the ones that are open and the ones that are closed.
What differences can you find between the ones that are still open and the ones
that are closed? List at least two differences and the SQL code you used to
arrive at your answer.

i. Difference 1: Businesses that closed had more 2 and 2.5 star reviews. Although
restaurants that are open are likely to receive more reviews, for the closed category,
the average review count was higher for the lower ratings even with effect. This
suggests that businesses with lower reviews are more likely to close.


ii. Difference 2: In every tier of star ratings businesses that are open have more reviews.
Staying open could lead to getting more reviews or if the data was taken at a point in time
when many businesses closed at once, an assumption could be made that businesses who recieve
more reviews are more likely to stay open.



SQL code used for analysis:

SELECT ROUND((AVG(review_count)), 0) as "AVG Review Count"
		,AVG(stars) as "AVG Rating"
		,is_open, count(*)
	FROM business
	GROUP BY is_open, stars



3. For this last part of your analysis, you are going to choose the type of
analysis you want to conduct on the Yelp dataset and are going to prepare the data
for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for
sentiment analysis, clustering businesses to find commonalities or anomalies
between them, predicting the overall star rating for a business, predicting
the number of fans a user will have, and so on. These are just a few examples
to get you started, so feel free to be creative and come up with your own
problem you want to solve. Provide answers, in-line, to all of the following:

i. Indicate the type of analysis you chose to do:

  I would like to see if Users
  with a higher average_star count have more fans than the the users with lower
  average_star counts. I'm curious if people respond more to positivity.


ii. Write 1-2 brief paragraphs on the type of data you will need for your
analysis and why you chose that data:

For my analysis I will need: the list of users, their review count,
average stars, and the number of fans. I would like to use use the review count,
 as a control, to help associate average stars to fan count. Without factoring
review count it could appear that a very negative has plenty of fans because of
some popularity outside of the Yelp network. Accounts with high review counts will be
more indicative of the effect on fans per account based on their positive or negative
content.


iii. Output of your finished dataset:

+-----------+--------------+------------------------+------+
| name      | review_count | round(average_stars,1) | fans |
+-----------+--------------+------------------------+------+
| Amy       |          609 |                    3.2 |  503 |
| Mimi      |          968 |                    4.0 |  497 |
| Harald    |         1153 |                    4.4 |  311 |
| Gerald    |         2000 |                    3.6 |  253 |
| Christine |          930 |                    3.7 |  173 |
| Lisa      |          813 |                    4.1 |  159 |
| Cat       |          377 |                    4.0 |  133 |
| William   |         1215 |                    4.4 |  126 |
| Fran      |          862 |                    4.1 |  124 |
| Lissa     |          834 |                    3.7 |  120 |
| Mark      |          861 |                    3.4 |  115 |
| Tiffany   |          408 |                    4.1 |  111 |
| bernice   |          255 |                    4.0 |  105 |
| Roanna    |         1039 |                    3.7 |  104 |
| Angela    |          694 |                    3.9 |  101 |
| .Hon      |         1246 |                    3.1 |  101 |
+-----------+--------------+------------------------+------+


iv. Provide the SQL code you used to create your final dataset:

SELECT name, review_count, round(average_stars,1), fans
FROM user
WHERE fans > 100
ORDER BY fans DESC
